#!/usr/bin/env node

// Script de verifica√ß√£o das prote√ß√µes implementadas
// Execute com: node verificar-protecoes.js

const fs = require('fs');
const path = require('path');

console.log('üõ°Ô∏è Verificando Prote√ß√µes do Site Lorde Tempus');
console.log('=' .repeat(50));

// Verificar arquivos modificados
const arquivosParaVerificar = [
    'index.html',
    'js/main.js', 
    'js/campanhas.js'
];

let todasProtecoesPresentesEs = true;

arquivosParaVerificar.forEach(arquivo => {
    console.log(`\nüìÅ Verificando: ${arquivo}`);
    
    try {
        const conteudo = fs.readFileSync(arquivo, 'utf8');
        
        if (arquivo === 'index.html') {
            // Verificar corre√ß√£o na fun√ß√£o animateCounter
            if (conteudo.includes('// Verificar se o elemento cont√©m apenas n√∫meros e o s√≠mbolo "+"')) {
                console.log('  ‚úÖ Corre√ß√£o da animateCounter presente');
            } else {
                console.log('  ‚ùå Corre√ß√£o da animateCounter ausente');
                todasProtecoesPresentesEs = false;
            }
            
            if (conteudo.includes('if (!/^\\d+\\+?$/.test(originalText))')) {
                console.log('  ‚úÖ Prote√ß√£o contra caracteres especiais presente');
            } else {
                console.log('  ‚ùå Prote√ß√£o contra caracteres especiais ausente'); 
                todasProtecoesPresentesEs = false;
            }
        }
        
        if (arquivo === 'js/main.js') {
            // Verificar fun√ß√£o safeAnimateNumber
            if (conteudo.includes('function safeAnimateNumber(')) {
                console.log('  ‚úÖ Fun√ß√£o safeAnimateNumber presente');
            } else {
                console.log('  ‚ùå Fun√ß√£o safeAnimateNumber ausente');
                todasProtecoesPresentesEs = false;
            }
            
            // Verificar fun√ß√£o protectImportantElements
            if (conteudo.includes('function protectImportantElements(')) {
                console.log('  ‚úÖ Fun√ß√£o protectImportantElements presente');
            } else {
                console.log('  ‚ùå Fun√ß√£o protectImportantElements ausente');
                todasProtecoesPresentesEs = false;
            }
            
            // Verificar ativa√ß√£o na inicializa√ß√£o
            if (conteudo.includes('protectImportantElements();')) {
                console.log('  ‚úÖ Prote√ß√£o ativada na inicializa√ß√£o');
            } else {
                console.log('  ‚ùå Prote√ß√£o n√£o ativada na inicializa√ß√£o');
                todasProtecoesPresentesEs = false;
            }
            
            // Verificar disponibiliza√ß√£o global
            if (conteudo.includes('window.safeAnimateNumber = safeAnimateNumber;')) {
                console.log('  ‚úÖ Fun√ß√£o disponibilizada globalmente');
            } else {
                console.log('  ‚ùå Fun√ß√£o n√£o disponibilizada globalmente');
                todasProtecoesPresentesEs = false;
            }
        }
        
        if (arquivo === 'js/campanhas.js') {
            // Verificar uso da fun√ß√£o segura
            if (conteudo.includes('window.safeAnimateNumber')) {
                console.log('  ‚úÖ Uso da fun√ß√£o segura presente');
            } else {
                console.log('  ‚ùå Uso da fun√ß√£o segura ausente');
                todasProtecoesPresentesEs = false;
            }
            
            // Verificar prote√ß√£o local
            if (conteudo.includes('üõ°Ô∏è Prote√ß√£o campanhas:')) {
                console.log('  ‚úÖ Prote√ß√£o local presente');
            } else {
                console.log('  ‚ùå Prote√ß√£o local ausente');
                todasProtecoesPresentesEs = false;
            }
        }
        
    } catch (error) {
        console.log(`  ‚ùå Erro ao ler arquivo: ${error.message}`);
        todasProtecoesPresentesEs = false;
    }
});

// Verificar se arquivo de teste foi criado
console.log(`\nüìÅ Verificando: test-protection.html`);
if (fs.existsSync('test-protection.html')) {
    console.log('  ‚úÖ Arquivo de teste criado');
} else {
    console.log('  ‚ùå Arquivo de teste n√£o encontrado');
    todasProtecoesPresentesEs = false;
}

// Resultado final
console.log('\n' + '=' .repeat(50));
if (todasProtecoesPresentesEs) {
    console.log('üéâ SUCESSO: Todas as prote√ß√µes est√£o implementadas!');
    console.log('');
    console.log('üìã Prote√ß√µes ativas:');
    console.log('  ‚Ä¢ Fun√ß√£o animateCounter corrigida no index.html');
    console.log('  ‚Ä¢ Fun√ß√£o safeAnimateNumber global no main.js');  
    console.log('  ‚Ä¢ Fun√ß√£o protectImportantElements no main.js');
    console.log('  ‚Ä¢ Prote√ß√£o ativada automaticamente');
    console.log('  ‚Ä¢ Campanhas.js usando fun√ß√£o segura');
    console.log('  ‚Ä¢ Arquivo de teste criado');
    console.log('');
    console.log('üåê Acesse os seguintes URLs para testar:');
    console.log('  ‚Ä¢ http://localhost:8080/index.html');
    console.log('  ‚Ä¢ http://localhost:8080/test-protection.html');
} else {
    console.log('‚ùå ATEN√á√ÉO: Algumas prote√ß√µes est√£o ausentes!');
    console.log('Verifique os erros acima e reaplique as corre√ß√µes necess√°rias.');
}

console.log(''); 